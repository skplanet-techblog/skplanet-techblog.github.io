{"version":3,"file":"component---src-templates-blog-post-js-f9000204df103ece5cc6.js","mappings":"sOAAA,EAAe,IAA0B,sDC0BzC,MAhBYA,IAAiB,IAAhB,OAAEC,GAAQD,EACrB,MAAM,KAAEE,EAAI,YAAEC,EAAW,UAAEC,EAAS,KAAEC,GCRjC,SAAmBH,GACxB,MAAMI,EAASC,EAAAA,EAAQL,aAAI,EAAJA,EAAMM,eAC7B,OAAIF,EACK,CACLJ,KAAM,GAAGI,EAAOJ,SAASI,EAAOG,QAChCN,YAAaG,EAAOH,YACpBC,UAAWE,EAAOF,WAAaM,EAC/BL,KAAMC,EAAOD,MAAQ,MAGlB,CACLH,OACAE,UAAWM,EAEf,CDNiDC,CAAUV,GACzD,OACEW,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKE,IAAKV,EAAWW,IAAI,UAAUF,UAAU,eAC5CZ,GACCW,EAAAA,cAAA,SACGP,EAAOO,EAAAA,cAAA,KAAGI,KAAMX,EAAMY,OAAO,SAASC,IAAI,cAAaN,EAAAA,cAAA,cAASV,IAAqBU,EAAAA,cAAA,cAASV,GAC/FU,EAAAA,cAAA,WACCT,K,uCEXX,MAwDagB,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACER,EAAAA,cAACY,EAAAA,EAAG,CACFC,MAAOF,EAAKG,YAAYD,MACxBtB,YAAaoB,EAAKG,YAAYvB,aAAeoB,EAAKI,WAKxD,MAjEyB3B,IAGlB,IAAD4B,EAAA,IAFJP,MAAM,SAAEQ,EAAQ,KAAEC,EAAI,KAAEC,EAAMT,eAAgBC,GAAM,SACpDS,GACDhC,EACC,MAAMiC,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBH,QAAS,mBAE9C,OACEb,EAAAA,cAACuB,EAAAA,EAAM,CAACH,SAAUA,EAAUP,MAAOQ,GACjCrB,EAAAA,cAAA,WACEC,UAAU,YACVuB,WAAS,EACTC,SAAS,6BAETzB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAI0B,SAAS,YAAYf,EAAKG,YAAYD,OAC1Cb,EAAAA,cAAA,SAAI2B,IAAMhB,EAAKG,YAAYc,MAAMC,OAAO,gBAE1C7B,EAAAA,cAAA,WACE8B,wBAAyB,CAAEC,OAAQpB,EAAKqB,MACxCN,SAAS,gBAEX1B,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACiC,EAAG,CAAC5C,OAAQsB,EAAKG,YAAYzB,WAGlCW,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEkC,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXvC,EAAAA,cAAA,UACGiB,GACCjB,EAAAA,cAACwC,EAAAA,KAAI,CAACC,GAAIxB,EAASyB,OAAOC,KAAMrC,IAAI,QAAO,KACtCW,EAASH,YAAYD,QAI9Bb,EAAAA,cAAA,UACGkB,GACClB,EAAAA,cAACwC,EAAAA,KAAI,CAACC,GAAIvB,EAAKwB,OAAOC,KAAMrC,IAAI,QAC7BY,EAAKJ,YAAYD,MAAM,U","sources":["webpack://skplanet-techtopic/./src/members/images/default.png","webpack://skplanet-techtopic/./src/components/bio.js","webpack://skplanet-techtopic/./src/hooks/useAuthor.js","webpack://skplanet-techtopic/./src/templates/blog-post.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/default-07262702af79c582e9f8424ce529c7d1.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useAuthor } from \"../hooks/useAuthor\"\n\nconst Bio = ({ author }) => {\n  const { name, description, thumbnail, link } = useAuthor(author);\n  return (\n    <div className=\"bio\">\n      <img src={thumbnail} alt=\"profile\" className=\"bio-avatar\" />\n      {author && (\n        <p>\n          {link ? <a href={link} target=\"_blank\" rel=\"noreferrer\"><strong>{name}</strong></a> : <strong>{name}</strong>}\n          <br />\n          {description}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import { MEMBERS } from \"../members\";\nimport thumbnailDefault from \"../members/images/default.png\";\n\nexport function useAuthor(name) {\n  const member = MEMBERS[name?.toLowerCase()];\n  if (member) {\n    return {\n      name: `${member.name} (${member.team})`,\n      description: member.description,\n      thumbnail: member.thumbnail || thumbnailDefault,\n      link: member.link || null,\n    };\n  }\n  return {\n    name,\n    thumbnail: thumbnailDefault,\n  };\n}\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport dayjs from \"dayjs\";\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `SK플래닛 TECH TOPIC`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2 itemProp=\"headline\">{post.frontmatter.title}</h2>\n          <p>{dayjs(post.frontmatter.date).format(\"YYYY.MM.DD\")}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio author={post.frontmatter.author} />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 200)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_ref","author","name","description","thumbnail","link","member","MEMBERS","toLowerCase","team","thumbnailDefault","useAuthor","React","className","src","alt","href","target","rel","Head","_ref2","data","markdownRemark","post","Seo","title","frontmatter","excerpt","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","Layout","itemScope","itemType","itemProp","dayjs","date","format","dangerouslySetInnerHTML","__html","html","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}