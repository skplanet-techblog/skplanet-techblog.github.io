{"version":3,"file":"component---src-templates-blog-post-js-cad3fb315e9473fb9561.js","mappings":"6JAKO,MAAMA,EAAU,CACrBC,OAAQ,CACNC,KAAM,MACNC,KAAM,YACNC,YAAa,0BACbC,UCVW,IAA0B,qDDWrCC,KAAM,iCAERC,IAAK,CACHL,KAAM,MACNC,KAAM,aACNC,YAAa,+BACbC,UEjBW,IAA0B,mDFmBvCG,MAAO,CACLN,KAAM,SACNC,KAAM,SACNC,YAAa,8BACbC,UGvBW,IAA0B,qDHyBvCI,MAAO,CACLP,KAAM,MACNC,KAAM,eACNC,YAAa,cACbC,UI7BW,IAA0B,qD,gICAzC,EAAe,IAA0B,sDC0BzC,MAhBY,IAAiB,IAAhB,OAAEK,GAAQ,EACrB,MAAM,KAAER,EAAI,YAAEE,EAAW,UAAEC,EAAS,KAAEC,GCRjC,SAAmBJ,GACxB,MAAMS,EAASX,EAAAA,EAAQE,EAAKU,eAC5B,OAAID,EACK,CACLT,KAASS,EAAOT,KAAI,KAAKS,EAAOR,KAAI,IACpCC,YAAaO,EAAOP,YACpBC,UAAWM,EAAON,WAAaQ,EAC/BP,KAAMK,EAAOL,MAAQ,MAGlB,CACLJ,OACAG,UAAWQ,EAEf,CDNiDC,CAAUJ,GACzD,OACE,uBAAKK,UAAU,OACb,uBAAKC,IAAKX,EAAWY,IAAI,UAAUF,UAAU,eAC5CL,GACC,yBACGJ,EAAO,qBAAGY,KAAMZ,EAAMa,OAAO,SAASC,IAAI,cAAa,8BAASlB,IAAqB,8BAASA,GAC/F,2BACCE,GAGD,E,oBEfV,MAwDaiB,EAAO,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACFC,MAAOD,EAAKE,YAAYD,MACxBrB,YAAaoB,EAAKE,YAAYtB,aAAeoB,EAAKG,SAClD,EAIN,MAjEyB,IAGlB,IAAD,MAFJL,MAAM,SAAEM,EAAQ,KAAEC,EAAI,KAAEC,EAAMP,eAAgBC,GAAM,SACpDO,GACD,EACC,MAAMC,GAA6B,QAAjB,EAAAF,EAAKG,oBAAY,aAAjB,EAAmBR,QAAK,kBAE1C,OACE,gBAAC,IAAM,CAACM,SAAUA,EAAUN,MAAOO,GACjC,2BACEjB,UAAU,YACVmB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYZ,EAAKE,YAAYD,OAC1C,yBAAID,EAAKE,YAAYW,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQf,EAAKgB,MACxCJ,SAAS,gBAEX,2BACA,8BACE,gBAAC,EAAG,CAAC1B,OAAQc,EAAKE,YAAYhB,WAGlC,uBAAKK,UAAU,iBACb,sBACE0B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGlB,GACC,gBAAC,EAAAmB,KAAI,CAACC,GAAIpB,EAASqB,OAAOC,KAAM9B,IAAI,QAAO,KACtCQ,EAASF,YAAYD,QAI9B,0BACGI,GACC,gBAAC,EAAAkB,KAAI,CAACC,GAAInB,EAAKoB,OAAOC,KAAM9B,IAAI,QAC7BS,EAAKH,YAAYD,MAAM,SAM3B,C","sources":["webpack://skplanet-techtopic/./src/members/index.js","webpack://skplanet-techtopic/./src/members/images/jayoon.jpg","webpack://skplanet-techtopic/./src/members/images/hdy.png","webpack://skplanet-techtopic/./src/members/images/neotf.png","webpack://skplanet-techtopic/./src/members/images/hyuna.png","webpack://skplanet-techtopic/./src/members/images/default.png","webpack://skplanet-techtopic/./src/components/bio.js","webpack://skplanet-techtopic/./src/hooks/useAuthor.js","webpack://skplanet-techtopic/./src/templates/blog-post.js"],"sourcesContent":["import jayoon from \"./images/jayoon.jpg\";\nimport hdy from \"./images/hdy.png\";\nimport neotf from \"./images/neotf.png\";\nimport hyuna from \"./images/hyuna.png\";\n\nexport const MEMBERS = {\n  jayoon: {\n    name: \"공자윤\",\n    team: \"Biz플랫폼개발팀\",\n    description: \"글쓰기를 좋아하는 프론트엔드 개발자입니다.\",\n    thumbnail: jayoon,\n    link: \"https://jayoon-kong.github.io\",\n  },\n  hdy: {\n    name: \"한대영\",\n    team: \"블록체인플랫폼개발팀\",\n    description: \"블록체인 기술과 Web3를 탐험 중인 개발자입니다.\",\n    thumbnail: hdy,\n  },\n  neotf: {\n    name: \"NEO TF\",\n    team: \"NEO TF\",\n    description: \"TechTopic 기술블로그를 운영하고 있습니다.\",\n    thumbnail: neotf,\n  },\n  hyuna: {\n    name: \"최현아\",\n    team: \"Solution UX팀\",\n    description: \"UX Designer\",\n    thumbnail: hyuna,\n  },\n};\n","export default __webpack_public_path__ + \"static/jayoon-d5c764119394a065460a4c01aa4969a5.jpg\";","export default __webpack_public_path__ + \"static/hdy-74e98db0449a3842ec29206955a1c2be.png\";","export default __webpack_public_path__ + \"static/neotf-07262702af79c582e9f8424ce529c7d1.png\";","export default __webpack_public_path__ + \"static/hyuna-e859d3f3422c29587df7bebce4a3a4a1.png\";","export default __webpack_public_path__ + \"static/default-07262702af79c582e9f8424ce529c7d1.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useAuthor } from \"../hooks/useAuthor\"\n\nconst Bio = ({ author }) => {\n  const { name, description, thumbnail, link } = useAuthor(author);\n  return (\n    <div className=\"bio\">\n      <img src={thumbnail} alt=\"profile\" className=\"bio-avatar\" />\n      {author && (\n        <p>\n          {link ? <a href={link} target=\"_blank\" rel=\"noreferrer\"><strong>{name}</strong></a> : <strong>{name}</strong>}\n          <br />\n          {description}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import { MEMBERS } from \"../members\";\nimport thumbnailDefault from \"../members/images/default.png\";\n\nexport function useAuthor(name) {\n  const member = MEMBERS[name.toLowerCase()];\n  if (member) {\n    return {\n      name: `${member.name} (${member.team})`,\n      description: member.description,\n      thumbnail: member.thumbnail || thumbnailDefault,\n      link: member.link || null\n    };\n  }\n  return {\n    name,\n    thumbnail: thumbnailDefault\n  };\n}","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `SK플래닛 TechTopic`;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h2 itemProp=\"headline\">{post.frontmatter.title}</h2>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio author={post.frontmatter.author} />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["MEMBERS","jayoon","name","team","description","thumbnail","link","hdy","neotf","hyuna","author","member","toLowerCase","thumbnailDefault","useAuthor","className","src","alt","href","target","rel","Head","data","markdownRemark","post","title","frontmatter","excerpt","previous","next","site","location","siteTitle","siteMetadata","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug"],"sourceRoot":""}